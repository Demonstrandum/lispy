VISUALISED_ABSTRACT_SYNTAX_TREE
┃
┣━<AST::Node[Call]
┃      ┣━caller
┃      ┃  ┗━<AST::Node[Symbol] ('define')>
┃      ┗━operands=[
┃         <AST::Node[Call]
┃            ┣━caller
┃            ┃  ┗━<AST::Node[Symbol] ('f')>
┃            ┗━operands=[
┃               <AST::Node[Symbol] ('x')>
┃              ]>
┃         <AST::Node[Call]
┃            ┣━caller
┃            ┃  ┗━<AST::Node[Symbol] ('if')>
┃            ┗━operands=[
┃               <AST::Node[Call]
┃               ┣━caller
┃               ┃  ┗━<AST::Node[Symbol] ('=')>
┃               ┗━operands=[
┃                  <AST::Node[Call]
┃                  ┣━caller
┃                  ┃  ┗━<AST::Node[Symbol] ('%')>
┃                  ┗━operands=[
┃                     <AST::Node[Symbol] ('x')>
┃                     <AST::Node[Numeric] (3)>
┃                    ]>
┃                  <AST::Node[Numeric] (0)>
┃                 ]>
┃               <AST::Node[Call]
┃               ┣━caller
┃               ┃  ┗━<AST::Node[Symbol] ('if')>
┃               ┗━operands=[
┃                  <AST::Node[Call]
┃                  ┣━caller
┃                  ┃  ┗━<AST::Node[Symbol] ('=')>
┃                  ┗━operands=[
┃                     <AST::Node[Call]
┃                     ┣━caller
┃                     ┃  ┗━<AST::Node[Symbol] ('%')>
┃                     ┗━operands=[
┃                        <AST::Node[Symbol] ('x')>
┃                        <AST::Node[Numeric] (5)>
┃                       ]>
┃                     <AST::Node[Numeric] (0)>
┃                    ]>
┃                  <AST::Node[String] ('fizzbuzz')>
┃                  <AST::Node[String] ('fizz')>
┃                 ]>
┃               <AST::Node[Call]
┃               ┣━caller
┃               ┃  ┗━<AST::Node[Symbol] ('string')>
┃               ┗━operands=[
┃                  <AST::Node[Symbol] ('x')>
┃                 ]>
┃              ]>
┃        ]>
┃
┣━<AST::Node[Call]
┃      ┣━caller
┃      ┃  ┗━<AST::Node[Symbol] ('let')>
┃      ┗━operands=[
┃         <AST::Node[Call]
┃            ┣━caller
┃            ┃  ┗━<AST::Node[Symbol] ('a')>
┃            ┗━operands=[
┃               <AST::Node[Call]
┃               ┣━caller
┃               ┃  ┗━<AST::Node[Symbol] ('list')>
┃               ┗━operands=[]>
┃              ]>
┃        ]>
┃
┣━<AST::Node[Call]
┃      ┣━caller
┃      ┃  ┗━<AST::Node[Symbol] ('define')>
┃      ┗━operands=[
┃         <AST::Node[Call]
┃            ┣━caller
┃            ┃  ┗━<AST::Node[Symbol] ('fill')>
┃            ┗━operands=[
┃               <AST::Node[Symbol] ('ar')>
┃               <AST::Node[Symbol] ('n')>
┃               <AST::Node[Symbol] ('m')>
┃              ]>
┃         <AST::Node[Call]
┃            ┣━caller
┃            ┃  ┗━<AST::Node[Symbol] ('unless')>
┃            ┗━operands=[
┃               <AST::Node[Call]
┃               ┣━caller
┃               ┃  ┗━<AST::Node[Symbol] ('<')>
┃               ┗━operands=[
┃                  <AST::Node[Symbol] ('n')>
┃                  <AST::Node[Symbol] ('m')>
┃                 ]>
┃               <AST::Node[Call]
┃               ┣━caller
┃               ┃  ┗━<AST::Node[Symbol] ('fill')>
┃               ┗━operands=[
┃                  <AST::Node[Call]
┃                  ┣━caller
┃                  ┃  ┗━<AST::Node[Symbol] ('push')>
┃                  ┗━operands=[
┃                     <AST::Node[Symbol] ('m')>
┃                     <AST::Node[Symbol] ('ar')>
┃                    ]>
┃                  <AST::Node[Symbol] ('n')>
┃                  <AST::Node[Call]
┃                  ┣━caller
┃                  ┃  ┗━<AST::Node[Symbol] ('+')>
┃                  ┗━operands=[
┃                     <AST::Node[Symbol] ('m')>
┃                     <AST::Node[Numeric] (1)>
┃                    ]>
┃                 ]>
┃               <AST::Node[Symbol] ('ar')>
┃              ]>
┃        ]>
┃
┣━<AST::Node[Call]
┃      ┣━caller
┃      ┃  ┗━<AST::Node[Symbol] ('push')>
┃      ┗━operands=[
┃         <AST::Node[Call]
┃            ┣━caller
┃            ┃  ┗━<AST::Node[Symbol] ('fill')>
┃            ┗━operands=[
┃               <AST::Node[Symbol] ('a')>
┃               <AST::Node[Numeric] (100)>
┃               <AST::Node[Numeric] (1)>
┃              ]>
┃         <AST::Node[Symbol] ('a')>
┃        ]>
┃
┣━<AST::Node[Call]
┃      ┣━caller
┃      ┃  ┗━<AST::Node[Symbol] ('puts')>
┃      ┗━operands=[
┃         <AST::Node[Symbol] ('a')>
┃        ]>
┃
SERIALISED_PICKLE_AST
b'\x80\x03clispy.tree\nTree\nq\x00)\x81q\x01(clispy.tree\nCall\nq\x02)\x81q\x03}q\x04(X\x08\x00\x00\x00locationq\x05}q\x06(X\x04\x00\x00\x00lineq\x07K\x01X\x06\x00\x00\x00columnq\x08K\x01X\x04\x00\x00\x00spanq\tK\x01uX\x08\x00\x00\x00operandsq\n]q\x0b(h\x02)\x81q\x0c}q\r(h\x05}q\x0e(h\x07K\x01h\x08K\th\tK\x01uh\n]q\x0fclispy.tree\nSymbol\nq\x10)\x81q\x11}q\x12(h\x05}q\x13(h\x07K\x01h\x08K\x0ch\tK\x01uX\x05\x00\x00\x00valueq\x14X\x01\x00\x00\x00xq\x15X\x04\x00\x00\x00typeq\x16h\x10X\x04\x00\x00\x00nameq\x17X\x06\x00\x00\x00Symbolq\x18ubah\x14h\x10)\x81q\x19}q\x1a(h\x05}q\x1b(h\x07K\x01h\x08K\nh\tK\x01uh\x14X\x01\x00\x00\x00fq\x1ch\x16h\x10h\x17X\x06\x00\x00\x00Symbolq\x1dubh\x16h\x02h\x17X\x04\x00\x00\x00Callq\x1eubh\x02)\x81q\x1f}q (h\x05}q!(h\x07K\x02h\x08K\x03h\tK\x01uh\n]q"(h\x02)\x81q#}q$(h\x05}q%(h\x07K\x02h\x08K\x07h\tK\x01uh\n]q&(h\x02)\x81q\'}q((h\x05}q)(h\x07K\x02h\x08K\nh\tK\x01uh\n]q*(h\x10)\x81q+}q,(h\x05}q-(h\x07K\x02h\x08K\rh\tK\x01uh\x14h\x15h\x16h\x10h\x17X\x06\x00\x00\x00Symbolq.ubclispy.tree\nNumeric\nq/)\x81q0}q1(h\x05}q2(h\x07K\x02h\x08K\x0fh\tK\x01uh\x14K\x03h\x16h/h\x17X\x07\x00\x00\x00Numericq3ubeh\x14h\x10)\x81q4}q5(h\x05}q6(h\x07K\x02h\x08K\x0bh\tK\x01uh\x14X\x01\x00\x00\x00%q7h\x16h\x10h\x17X\x06\x00\x00\x00Symbolq8ubh\x16h\x02h\x17X\x04\x00\x00\x00Callq9ubh/)\x81q:}q;(h\x05}q<(h\x07K\x02h\x08K\x12h\tK\x01uh\x14K\x00h\x16h/h\x17X\x07\x00\x00\x00Numericq=ubeh\x14h\x10)\x81q>}q?(h\x05}q@(h\x07K\x02h\x08K\x08h\tK\x01uh\x14X\x01\x00\x00\x00=qAh\x16h\x10h\x17X\x06\x00\x00\x00SymbolqBubh\x16h\x02h\x17X\x04\x00\x00\x00CallqCubh\x02)\x81qD}qE(h\x05}qF(h\x07K\x03h\x08K\x05h\tK\x01uh\n]qG(h\x02)\x81qH}qI(h\x05}qJ(h\x07K\x03h\x08K\th\tK\x01uh\n]qK(h\x02)\x81qL}qM(h\x05}qN(h\x07K\x03h\x08K\x0ch\tK\x01uh\n]qO(h\x10)\x81qP}qQ(h\x05}qR(h\x07K\x03h\x08K\x0fh\tK\x01uh\x14h\x15h\x16h\x10h\x17X\x06\x00\x00\x00SymbolqSubh/)\x81qT}qU(h\x05}qV(h\x07K\x03h\x08K\x11h\tK\x01uh\x14K\x05h\x16h/h\x17X\x07\x00\x00\x00NumericqWubeh\x14h\x10)\x81qX}qY(h\x05}qZ(h\x07K\x03h\x08K\rh\tK\x01uh\x14h7h\x16h\x10h\x17X\x06\x00\x00\x00Symbolq[ubh\x16h\x02h\x17X\x04\x00\x00\x00Callq\\ubh/)\x81q]}q^(h\x05}q_(h\x07K\x03h\x08K\x14h\tK\x01uh\x14K\x00h\x16h/h\x17X\x07\x00\x00\x00Numericq`ubeh\x14h\x10)\x81qa}qb(h\x05}qc(h\x07K\x03h\x08K\nh\tK\x01uh\x14hAh\x16h\x10h\x17X\x06\x00\x00\x00Symbolqdubh\x16h\x02h\x17X\x04\x00\x00\x00Callqeubclispy.tree\nString\nqf)\x81qg}qh(h\x05}qi(h\x07K\x04h\x08K\x07h\tK\x08uh\x14X\x08\x00\x00\x00fizzbuzzqjh\x16hfh\x17X\x06\x00\x00\x00Stringqkubhf)\x81ql}qm(h\x05}qn(h\x07K\x05h\x08K\x07h\tK\x04uh\x14X\x04\x00\x00\x00fizzqoh\x16hfh\x17X\x06\x00\x00\x00Stringqpubeh\x14h\x10)\x81qq}qr(h\x05}qs(h\x07K\x03h\x08K\x06h\tK\x02uh\x14X\x02\x00\x00\x00ifqth\x16h\x10h\x17X\x06\x00\x00\x00Symbolquubh\x16h\x02h\x17X\x04\x00\x00\x00Callqvubh\x02)\x81qw}qx(h\x05}qy(h\x07K\x06h\x08K\x05h\tK\x01uh\n]qzh\x10)\x81q{}q|(h\x05}q}(h\x07K\x06h\x08K\rh\tK\x01uh\x14h\x15h\x16h\x10h\x17X\x06\x00\x00\x00Symbolq~ubah\x14h\x10)\x81q\x7f}q\x80(h\x05}q\x81(h\x07K\x06h\x08K\x06h\tK\x06uh\x14X\x06\x00\x00\x00stringq\x82h\x16h\x10h\x17X\x06\x00\x00\x00Symbolq\x83ubh\x16h\x02h\x17X\x04\x00\x00\x00Callq\x84ubeh\x14h\x10)\x81q\x85}q\x86(h\x05}q\x87(h\x07K\x02h\x08K\x04h\tK\x02uh\x14X\x02\x00\x00\x00ifq\x88h\x16h\x10h\x17X\x06\x00\x00\x00Symbolq\x89ubh\x16h\x02h\x17X\x04\x00\x00\x00Callq\x8aubeh\x14h\x10)\x81q\x8b}q\x8c(h\x05}q\x8d(h\x07K\x01h\x08K\x02h\tK\x06uh\x14X\x06\x00\x00\x00defineq\x8eh\x16h\x10h\x17X\x06\x00\x00\x00Symbolq\x8fubh\x16h\x02h\x17X\x04\x00\x00\x00Callq\x90ubh\x02)\x81q\x91}q\x92(h\x05}q\x93(h\x07K\th\x08K\x01h\tK\x01uh\n]q\x94h\x02)\x81q\x95}q\x96(h\x05}q\x97(h\x07K\th\x08K\x06h\tK\x01uh\n]q\x98h\x02)\x81q\x99}q\x9a(h\x05}q\x9b(h\x07K\th\x08K\th\tK\x01uh\n]q\x9ch\x14h\x10)\x81q\x9d}q\x9e(h\x05}q\x9f(h\x07K\th\x08K\nh\tK\x04uh\x14X\x04\x00\x00\x00listq\xa0h\x16h\x10h\x17X\x06\x00\x00\x00Symbolq\xa1ubh\x16h\x02h\x17X\x04\x00\x00\x00Callq\xa2ubah\x14h\x10)\x81q\xa3}q\xa4(h\x05}q\xa5(h\x07K\th\x08K\x07h\tK\x01uh\x14X\x01\x00\x00\x00aq\xa6h\x16h\x10h\x17X\x06\x00\x00\x00Symbolq\xa7ubh\x16h\x02h\x17X\x04\x00\x00\x00Callq\xa8ubah\x14h\x10)\x81q\xa9}q\xaa(h\x05}q\xab(h\x07K\th\x08K\x02h\tK\x03uh\x14X\x03\x00\x00\x00letq\xach\x16h\x10h\x17X\x06\x00\x00\x00Symbolq\xadubh\x16h\x02h\x17X\x04\x00\x00\x00Callq\xaeubh\x02)\x81q\xaf}q\xb0(h\x05}q\xb1(h\x07K\x0bh\x08K\x01h\tK\x01uh\n]q\xb2(h\x02)\x81q\xb3}q\xb4(h\x05}q\xb5(h\x07K\x0bh\x08K\th\tK\x01uh\n]q\xb6(h\x10)\x81q\xb7}q\xb8(h\x05}q\xb9(h\x07K\x0bh\x08K\x0fh\tK\x02uh\x14X\x02\x00\x00\x00arq\xbah\x16h\x10h\x17X\x06\x00\x00\x00Symbolq\xbbubh\x10)\x81q\xbc}q\xbd(h\x05}q\xbe(h\x07K\x0bh\x08K\x12h\tK\x01uh\x14X\x01\x00\x00\x00nq\xbfh\x16h\x10h\x17X\x06\x00\x00\x00Symbolq\xc0ubh\x10)\x81q\xc1}q\xc2(h\x05}q\xc3(h\x07K\x0bh\x08K\x14h\tK\x01uh\x14X\x01\x00\x00\x00mq\xc4h\x16h\x10h\x17X\x06\x00\x00\x00Symbolq\xc5ubeh\x14h\x10)\x81q\xc6}q\xc7(h\x05}q\xc8(h\x07K\x0bh\x08K\nh\tK\x04uh\x14X\x04\x00\x00\x00fillq\xc9h\x16h\x10h\x17X\x06\x00\x00\x00Symbolq\xcaubh\x16h\x02h\x17X\x04\x00\x00\x00Callq\xcbubh\x02)\x81q\xcc}q\xcd(h\x05}q\xce(h\x07K\x0ch\x08K\x03h\tK\x01uh\n]q\xcf(h\x02)\x81q\xd0}q\xd1(h\x05}q\xd2(h\x07K\x0ch\x08K\x0bh\tK\x01uh\n]q\xd3(h\x10)\x81q\xd4}q\xd5(h\x05}q\xd6(h\x07K\x0ch\x08K\x0eh\tK\x01uh\x14h\xbfh\x16h\x10h\x17X\x06\x00\x00\x00Symbolq\xd7ubh\x10)\x81q\xd8}q\xd9(h\x05}q\xda(h\x07K\x0ch\x08K\x10h\tK\x01uh\x14h\xc4h\x16h\x10h\x17X\x06\x00\x00\x00Symbolq\xdbubeh\x14h\x10)\x81q\xdc}q\xdd(h\x05}q\xde(h\x07K\x0ch\x08K\x0ch\tK\x01uh\x14X\x01\x00\x00\x00<q\xdfh\x16h\x10h\x17X\x06\x00\x00\x00Symbolq\xe0ubh\x16h\x02h\x17X\x04\x00\x00\x00Callq\xe1ubh\x02)\x81q\xe2}q\xe3(h\x05}q\xe4(h\x07K\rh\x08K\x05h\tK\x01uh\n]q\xe5(h\x02)\x81q\xe6}q\xe7(h\x05}q\xe8(h\x07K\rh\x08K\x0bh\tK\x01uh\n]q\xe9(h\x10)\x81q\xea}q\xeb(h\x05}q\xec(h\x07K\rh\x08K\x11h\tK\x01uh\x14h\xc4h\x16h\x10h\x17X\x06\x00\x00\x00Symbolq\xedubh\x10)\x81q\xee}q\xef(h\x05}q\xf0(h\x07K\rh\x08K\x13h\tK\x02uh\x14X\x02\x00\x00\x00arq\xf1h\x16h\x10h\x17X\x06\x00\x00\x00Symbolq\xf2ubeh\x14h\x10)\x81q\xf3}q\xf4(h\x05}q\xf5(h\x07K\rh\x08K\x0ch\tK\x04uh\x14X\x04\x00\x00\x00pushq\xf6h\x16h\x10h\x17X\x06\x00\x00\x00Symbolq\xf7ubh\x16h\x02h\x17X\x04\x00\x00\x00Callq\xf8ubh\x10)\x81q\xf9}q\xfa(h\x05}q\xfb(h\x07K\rh\x08K\x17h\tK\x01uh\x14h\xbfh\x16h\x10h\x17X\x06\x00\x00\x00Symbolq\xfcubh\x02)\x81q\xfd}q\xfe(h\x05}q\xff(h\x07K\rh\x08K\x19h\tK\x01uh\n]r\x00\x01\x00\x00(h\x10)\x81r\x01\x01\x00\x00}r\x02\x01\x00\x00(h\x05}r\x03\x01\x00\x00(h\x07K\rh\x08K\x1ch\tK\x01uh\x14h\xc4h\x16h\x10h\x17X\x06\x00\x00\x00Symbolr\x04\x01\x00\x00ubh/)\x81r\x05\x01\x00\x00}r\x06\x01\x00\x00(h\x05}r\x07\x01\x00\x00(h\x07K\rh\x08K\x1eh\tK\x01uh\x14K\x01h\x16h/h\x17X\x07\x00\x00\x00Numericr\x08\x01\x00\x00ubeh\x14h\x10)\x81r\t\x01\x00\x00}r\n\x01\x00\x00(h\x05}r\x0b\x01\x00\x00(h\x07K\rh\x08K\x1ah\tK\x01uh\x14X\x01\x00\x00\x00+r\x0c\x01\x00\x00h\x16h\x10h\x17X\x06\x00\x00\x00Symbolr\r\x01\x00\x00ubh\x16h\x02h\x17X\x04\x00\x00\x00Callr\x0e\x01\x00\x00ubeh\x14h\x10)\x81r\x0f\x01\x00\x00}r\x10\x01\x00\x00(h\x05}r\x11\x01\x00\x00(h\x07K\rh\x08K\x06h\tK\x04uh\x14X\x04\x00\x00\x00fillr\x12\x01\x00\x00h\x16h\x10h\x17X\x06\x00\x00\x00Symbolr\x13\x01\x00\x00ubh\x16h\x02h\x17X\x04\x00\x00\x00Callr\x14\x01\x00\x00ubh\x10)\x81r\x15\x01\x00\x00}r\x16\x01\x00\x00(h\x05}r\x17\x01\x00\x00(h\x07K\x0eh\x08K\x05h\tK\x02uh\x14X\x02\x00\x00\x00arr\x18\x01\x00\x00h\x16h\x10h\x17X\x06\x00\x00\x00Symbolr\x19\x01\x00\x00ubeh\x14h\x10)\x81r\x1a\x01\x00\x00}r\x1b\x01\x00\x00(h\x05}r\x1c\x01\x00\x00(h\x07K\x0ch\x08K\x04h\tK\x06uh\x14X\x06\x00\x00\x00unlessr\x1d\x01\x00\x00h\x16h\x10h\x17X\x06\x00\x00\x00Symbolr\x1e\x01\x00\x00ubh\x16h\x02h\x17X\x04\x00\x00\x00Callr\x1f\x01\x00\x00ubeh\x14h\x10)\x81r \x01\x00\x00}r!\x01\x00\x00(h\x05}r"\x01\x00\x00(h\x07K\x0bh\x08K\x02h\tK\x06uh\x14X\x06\x00\x00\x00definer#\x01\x00\x00h\x16h\x10h\x17X\x06\x00\x00\x00Symbolr$\x01\x00\x00ubh\x16h\x02h\x17X\x04\x00\x00\x00Callr%\x01\x00\x00ubh\x02)\x81r&\x01\x00\x00}r\'\x01\x00\x00(h\x05}r(\x01\x00\x00(h\x07K\x11h\x08K\x01h\tK\x01uh\n]r)\x01\x00\x00(h\x02)\x81r*\x01\x00\x00}r+\x01\x00\x00(h\x05}r,\x01\x00\x00(h\x07K\x11h\x08K\x07h\tK\x01uh\n]r-\x01\x00\x00(h\x10)\x81r.\x01\x00\x00}r/\x01\x00\x00(h\x05}r0\x01\x00\x00(h\x07K\x11h\x08K\rh\tK\x01uh\x14h\xa6h\x16h\x10h\x17X\x06\x00\x00\x00Symbolr1\x01\x00\x00ubh/)\x81r2\x01\x00\x00}r3\x01\x00\x00(h\x05}r4\x01\x00\x00(h\x07K\x11h\x08K\x0fh\tK\x03uh\x14Kdh\x16h/h\x17X\x07\x00\x00\x00Numericr5\x01\x00\x00ubh/)\x81r6\x01\x00\x00}r7\x01\x00\x00(h\x05}r8\x01\x00\x00(h\x07K\x11h\x08K\x13h\tK\x01uh\x14K\x01h\x16h/h\x17X\x07\x00\x00\x00Numericr9\x01\x00\x00ubeh\x14h\x10)\x81r:\x01\x00\x00}r;\x01\x00\x00(h\x05}r<\x01\x00\x00(h\x07K\x11h\x08K\x08h\tK\x04uh\x14X\x04\x00\x00\x00fillr=\x01\x00\x00h\x16h\x10h\x17X\x06\x00\x00\x00Symbolr>\x01\x00\x00ubh\x16h\x02h\x17X\x04\x00\x00\x00Callr?\x01\x00\x00ubh\x10)\x81r@\x01\x00\x00}rA\x01\x00\x00(h\x05}rB\x01\x00\x00(h\x07K\x11h\x08K\x16h\tK\x01uh\x14h\xa6h\x16h\x10h\x17X\x06\x00\x00\x00SymbolrC\x01\x00\x00ubeh\x14h\x10)\x81rD\x01\x00\x00}rE\x01\x00\x00(h\x05}rF\x01\x00\x00(h\x07K\x11h\x08K\x02h\tK\x04uh\x14X\x04\x00\x00\x00pushrG\x01\x00\x00h\x16h\x10h\x17X\x06\x00\x00\x00SymbolrH\x01\x00\x00ubh\x16h\x02h\x17X\x04\x00\x00\x00CallrI\x01\x00\x00ubh\x02)\x81rJ\x01\x00\x00}rK\x01\x00\x00(h\x05}rL\x01\x00\x00(h\x07K\x12h\x08K\x01h\tK\x01uh\n]rM\x01\x00\x00h\x10)\x81rN\x01\x00\x00}rO\x01\x00\x00(h\x05}rP\x01\x00\x00(h\x07K\x12h\x08K\x07h\tK\x01uh\x14h\xa6h\x16h\x10h\x17X\x06\x00\x00\x00SymbolrQ\x01\x00\x00ubah\x14h\x10)\x81rR\x01\x00\x00}rS\x01\x00\x00(h\x05}rT\x01\x00\x00(h\x07K\x12h\x08K\x02h\tK\x04uh\x14X\x04\x00\x00\x00putsrU\x01\x00\x00h\x16h\x10h\x17X\x06\x00\x00\x00SymbolrV\x01\x00\x00ubh\x16h\x02h\x17X\x04\x00\x00\x00CallrW\x01\x00\x00ube}rX\x01\x00\x00X\x04\x00\x00\x00filerY\x01\x00\x00X\x16\x00\x00\x00samples/fizzbuzz.lispyrZ\x01\x00\x00sb.'