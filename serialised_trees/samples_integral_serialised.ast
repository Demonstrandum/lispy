VISUALISED_ABSTRACT_SYNTAX_TREE
┃
┣━<AST::Node[Call]
┃      ┣━caller
┃      ┃  ┗━<AST::Node[Symbol] (let)>
┃      ┗━operands=[
┃         <AST::Node[Call]
┃            ┣━caller
┃            ┃  ┗━<AST::Node[Symbol] (dx)>
┃            ┗━operands=[
┃               <AST::Node[Numeric] (0.05)>
┃              ]>
┃        ]>
┃
┣━<AST::Node[Call]
┃      ┣━caller
┃      ┃  ┗━<AST::Node[Symbol] (define)>
┃      ┗━operands=[
┃         <AST::Node[Call]
┃            ┣━caller
┃            ┃  ┗━<AST::Node[Symbol] (f)>
┃            ┗━operands=[
┃               <AST::Node[Symbol] (x)>
┃              ]>
┃         <AST::Node[Call]
┃            ┣━caller
┃            ┃  ┗━<AST::Node[Symbol] (+)>
┃            ┗━operands=[
┃               <AST::Node[Call]
┃               ┣━caller
┃               ┃  ┗━<AST::Node[Symbol] (*)>
┃               ┗━operands=[
┃                  <AST::Node[Numeric] (3)>
┃                  <AST::Node[Symbol] (x)>
┃                 ]>
┃               <AST::Node[Call]
┃               ┣━caller
┃               ┃  ┗━<AST::Node[Symbol] (*)>
┃               ┗━operands=[
┃                  <AST::Node[Symbol] (x)>
┃                  <AST::Node[Symbol] (x)>
┃                 ]>
┃              ]>
┃        ]>
┃
┣━<AST::Node[Call]
┃      ┣━caller
┃      ┃  ┗━<AST::Node[Symbol] (define)>
┃      ┗━operands=[
┃         <AST::Node[Call]
┃            ┣━caller
┃            ┃  ┗━<AST::Node[Symbol] (integ)>
┃            ┗━operands=[
┃               <AST::Node[Symbol] (a)>
┃               <AST::Node[Symbol] (b)>
┃              ]>
┃         <AST::Node[Call]
┃            ┣━caller
┃            ┃  ┗━<AST::Node[Symbol] (if)>
┃            ┗━operands=[
┃               <AST::Node[Call]
┃               ┣━caller
┃               ┃  ┗━<AST::Node[Symbol] (<)>
┃               ┗━operands=[
┃                  <AST::Node[Symbol] (a)>
┃                  <AST::Node[Symbol] (b)>
┃                 ]>
┃               <AST::Node[Call]
┃               ┣━caller
┃               ┃  ┗━<AST::Node[Symbol] (+)>
┃               ┗━operands=[
┃                  <AST::Node[Call]
┃                  ┣━caller
┃                  ┃  ┗━<AST::Node[Symbol] (*)>
┃                  ┗━operands=[
┃                     <AST::Node[Symbol] (dx)>
┃                     <AST::Node[Call]
┃                     ┣━caller
┃                     ┃  ┗━<AST::Node[Symbol] (f)>
┃                     ┗━operands=[
┃                        <AST::Node[Symbol] (a)>
┃                       ]>
┃                    ]>
┃                  <AST::Node[Call]
┃                  ┣━caller
┃                  ┃  ┗━<AST::Node[Symbol] (integ)>
┃                  ┗━operands=[
┃                     <AST::Node[Call]
┃                     ┣━caller
┃                     ┃  ┗━<AST::Node[Symbol] (+)>
┃                     ┗━operands=[
┃                        <AST::Node[Symbol] (dx)>
┃                        <AST::Node[Symbol] (a)>
┃                       ]>
┃                     <AST::Node[Symbol] (b)>
┃                    ]>
┃                 ]>
┃               <AST::Node[Numeric] (0)>
┃              ]>
┃        ]>
┃
┣━<AST::Node[Call]
┃      ┣━caller
┃      ┃  ┗━<AST::Node[Symbol] (puts)>
┃      ┗━operands=[
┃         <AST::Node[Call]
┃            ┣━caller
┃            ┃  ┗━<AST::Node[Symbol] (integ)>
┃            ┗━operands=[
┃               <AST::Node[Numeric] (2)>
┃               <AST::Node[Numeric] (7)>
┃              ]>
┃        ]>
┃
SERIALISED_PICKLE_AST
b'\x80\x03clispy.tree\nTree\nq\x00)\x81q\x01(clispy.tree\nCall\nq\x02)\x81q\x03}q\x04(X\x08\x00\x00\x00locationq\x05}q\x06(X\x04\x00\x00\x00lineq\x07K\x01X\x06\x00\x00\x00columnq\x08K\x01X\x04\x00\x00\x00spanq\tK\x01uX\x08\x00\x00\x00operandsq\n]q\x0bh\x02)\x81q\x0c}q\r(h\x05}q\x0e(h\x07K\x01h\x08K\x06h\tK\x01uh\n]q\x0fclispy.tree\nNumeric\nq\x10)\x81q\x11}q\x12(h\x05}q\x13(h\x07K\x01h\x08K\nh\tK\x04uX\x05\x00\x00\x00valueq\x14G?\xa9\x99\x99\x99\x99\x99\x9aX\x04\x00\x00\x00typeq\x15h\x10X\x04\x00\x00\x00nameq\x16X\x07\x00\x00\x00Numericq\x17ubah\x14clispy.tree\nSymbol\nq\x18)\x81q\x19}q\x1a(h\x05}q\x1b(h\x07K\x01h\x08K\x07h\tK\x02uh\x14X\x02\x00\x00\x00dxq\x1ch\x15h\x18h\x16X\x06\x00\x00\x00Symbolq\x1dubh\x15h\x02h\x16X\x04\x00\x00\x00Callq\x1eubah\x14h\x18)\x81q\x1f}q (h\x05}q!(h\x07K\x01h\x08K\x02h\tK\x03uh\x14X\x03\x00\x00\x00letq"h\x15h\x18h\x16X\x06\x00\x00\x00Symbolq#ubh\x15h\x02h\x16X\x04\x00\x00\x00Callq$ubh\x02)\x81q%}q&(h\x05}q\'(h\x07K\x04h\x08K\x01h\tK\x01uh\n]q((h\x02)\x81q)}q*(h\x05}q+(h\x07K\x04h\x08K\th\tK\x01uh\n]q,h\x18)\x81q-}q.(h\x05}q/(h\x07K\x04h\x08K\x0ch\tK\x01uh\x14X\x01\x00\x00\x00xq0h\x15h\x18h\x16X\x06\x00\x00\x00Symbolq1ubah\x14h\x18)\x81q2}q3(h\x05}q4(h\x07K\x04h\x08K\nh\tK\x01uh\x14X\x01\x00\x00\x00fq5h\x15h\x18h\x16X\x06\x00\x00\x00Symbolq6ubh\x15h\x02h\x16X\x04\x00\x00\x00Callq7ubh\x02)\x81q8}q9(h\x05}q:(h\x07K\x04h\x08K\x0fh\tK\x01uh\n]q;(h\x02)\x81q<}q=(h\x05}q>(h\x07K\x04h\x08K\x12h\tK\x01uh\n]q?(h\x10)\x81q@}qA(h\x05}qB(h\x07K\x04h\x08K\x15h\tK\x01uh\x14K\x03h\x15h\x10h\x16X\x07\x00\x00\x00NumericqCubh\x18)\x81qD}qE(h\x05}qF(h\x07K\x04h\x08K\x17h\tK\x01uh\x14h0h\x15h\x18h\x16X\x06\x00\x00\x00SymbolqGubeh\x14h\x18)\x81qH}qI(h\x05}qJ(h\x07K\x04h\x08K\x13h\tK\x01uh\x14X\x01\x00\x00\x00*qKh\x15h\x18h\x16X\x06\x00\x00\x00SymbolqLubh\x15h\x02h\x16X\x04\x00\x00\x00CallqMubh\x02)\x81qN}qO(h\x05}qP(h\x07K\x04h\x08K\x1ah\tK\x01uh\n]qQ(h\x18)\x81qR}qS(h\x05}qT(h\x07K\x04h\x08K\x1dh\tK\x01uh\x14h0h\x15h\x18h\x16X\x06\x00\x00\x00SymbolqUubh\x18)\x81qV}qW(h\x05}qX(h\x07K\x04h\x08K\x1fh\tK\x01uh\x14h0h\x15h\x18h\x16X\x06\x00\x00\x00SymbolqYubeh\x14h\x18)\x81qZ}q[(h\x05}q\\(h\x07K\x04h\x08K\x1bh\tK\x01uh\x14hKh\x15h\x18h\x16X\x06\x00\x00\x00Symbolq]ubh\x15h\x02h\x16X\x04\x00\x00\x00Callq^ubeh\x14h\x18)\x81q_}q`(h\x05}qa(h\x07K\x04h\x08K\x10h\tK\x01uh\x14X\x01\x00\x00\x00+qbh\x15h\x18h\x16X\x06\x00\x00\x00Symbolqcubh\x15h\x02h\x16X\x04\x00\x00\x00Callqdubeh\x14h\x18)\x81qe}qf(h\x05}qg(h\x07K\x04h\x08K\x02h\tK\x06uh\x14X\x06\x00\x00\x00defineqhh\x15h\x18h\x16X\x06\x00\x00\x00Symbolqiubh\x15h\x02h\x16X\x04\x00\x00\x00Callqjubh\x02)\x81qk}ql(h\x05}qm(h\x07K\x07h\x08K\x01h\tK\x01uh\n]qn(h\x02)\x81qo}qp(h\x05}qq(h\x07K\x07h\x08K\th\tK\x01uh\n]qr(h\x18)\x81qs}qt(h\x05}qu(h\x07K\x07h\x08K\x10h\tK\x01uh\x14X\x01\x00\x00\x00aqvh\x15h\x18h\x16X\x06\x00\x00\x00Symbolqwubh\x18)\x81qx}qy(h\x05}qz(h\x07K\x07h\x08K\x12h\tK\x01uh\x14X\x01\x00\x00\x00bq{h\x15h\x18h\x16X\x06\x00\x00\x00Symbolq|ubeh\x14h\x18)\x81q}}q~(h\x05}q\x7f(h\x07K\x07h\x08K\nh\tK\x05uh\x14X\x05\x00\x00\x00integq\x80h\x15h\x18h\x16X\x06\x00\x00\x00Symbolq\x81ubh\x15h\x02h\x16X\x04\x00\x00\x00Callq\x82ubh\x02)\x81q\x83}q\x84(h\x05}q\x85(h\x07K\x08h\x08K\x03h\tK\x01uh\n]q\x86(h\x02)\x81q\x87}q\x88(h\x05}q\x89(h\x07K\x08h\x08K\x07h\tK\x01uh\n]q\x8a(h\x18)\x81q\x8b}q\x8c(h\x05}q\x8d(h\x07K\x08h\x08K\nh\tK\x01uh\x14hvh\x15h\x18h\x16X\x06\x00\x00\x00Symbolq\x8eubh\x18)\x81q\x8f}q\x90(h\x05}q\x91(h\x07K\x08h\x08K\x0ch\tK\x01uh\x14h{h\x15h\x18h\x16X\x06\x00\x00\x00Symbolq\x92ubeh\x14h\x18)\x81q\x93}q\x94(h\x05}q\x95(h\x07K\x08h\x08K\x08h\tK\x01uh\x14X\x01\x00\x00\x00<q\x96h\x15h\x18h\x16X\x06\x00\x00\x00Symbolq\x97ubh\x15h\x02h\x16X\x04\x00\x00\x00Callq\x98ubh\x02)\x81q\x99}q\x9a(h\x05}q\x9b(h\x07K\th\x08K\x05h\tK\x01uh\n]q\x9c(h\x02)\x81q\x9d}q\x9e(h\x05}q\x9f(h\x07K\th\x08K\x08h\tK\x01uh\n]q\xa0(h\x18)\x81q\xa1}q\xa2(h\x05}q\xa3(h\x07K\th\x08K\x0bh\tK\x02uh\x14X\x02\x00\x00\x00dxq\xa4h\x15h\x18h\x16X\x06\x00\x00\x00Symbolq\xa5ubh\x02)\x81q\xa6}q\xa7(h\x05}q\xa8(h\x07K\th\x08K\x0eh\tK\x01uh\n]q\xa9h\x18)\x81q\xaa}q\xab(h\x05}q\xac(h\x07K\th\x08K\x11h\tK\x01uh\x14hvh\x15h\x18h\x16X\x06\x00\x00\x00Symbolq\xadubah\x14h\x18)\x81q\xae}q\xaf(h\x05}q\xb0(h\x07K\th\x08K\x0fh\tK\x01uh\x14h5h\x15h\x18h\x16X\x06\x00\x00\x00Symbolq\xb1ubh\x15h\x02h\x16X\x04\x00\x00\x00Callq\xb2ubeh\x14h\x18)\x81q\xb3}q\xb4(h\x05}q\xb5(h\x07K\th\x08K\th\tK\x01uh\x14hKh\x15h\x18h\x16X\x06\x00\x00\x00Symbolq\xb6ubh\x15h\x02h\x16X\x04\x00\x00\x00Callq\xb7ubh\x02)\x81q\xb8}q\xb9(h\x05}q\xba(h\x07K\th\x08K\x15h\tK\x01uh\n]q\xbb(h\x02)\x81q\xbc}q\xbd(h\x05}q\xbe(h\x07K\th\x08K\x1ch\tK\x01uh\n]q\xbf(h\x18)\x81q\xc0}q\xc1(h\x05}q\xc2(h\x07K\th\x08K\x1fh\tK\x02uh\x14X\x02\x00\x00\x00dxq\xc3h\x15h\x18h\x16X\x06\x00\x00\x00Symbolq\xc4ubh\x18)\x81q\xc5}q\xc6(h\x05}q\xc7(h\x07K\th\x08K"h\tK\x01uh\x14hvh\x15h\x18h\x16X\x06\x00\x00\x00Symbolq\xc8ubeh\x14h\x18)\x81q\xc9}q\xca(h\x05}q\xcb(h\x07K\th\x08K\x1dh\tK\x01uh\x14hbh\x15h\x18h\x16X\x06\x00\x00\x00Symbolq\xccubh\x15h\x02h\x16X\x04\x00\x00\x00Callq\xcdubh\x18)\x81q\xce}q\xcf(h\x05}q\xd0(h\x07K\th\x08K%h\tK\x01uh\x14h{h\x15h\x18h\x16X\x06\x00\x00\x00Symbolq\xd1ubeh\x14h\x18)\x81q\xd2}q\xd3(h\x05}q\xd4(h\x07K\th\x08K\x16h\tK\x05uh\x14X\x05\x00\x00\x00integq\xd5h\x15h\x18h\x16X\x06\x00\x00\x00Symbolq\xd6ubh\x15h\x02h\x16X\x04\x00\x00\x00Callq\xd7ubeh\x14h\x18)\x81q\xd8}q\xd9(h\x05}q\xda(h\x07K\th\x08K\x06h\tK\x01uh\x14hbh\x15h\x18h\x16X\x06\x00\x00\x00Symbolq\xdbubh\x15h\x02h\x16X\x04\x00\x00\x00Callq\xdcubh\x10)\x81q\xdd}q\xde(h\x05}q\xdf(h\x07K\nh\x08K\x05h\tK\x01uh\x14K\x00h\x15h\x10h\x16X\x07\x00\x00\x00Numericq\xe0ubeh\x14h\x18)\x81q\xe1}q\xe2(h\x05}q\xe3(h\x07K\x08h\x08K\x04h\tK\x02uh\x14X\x02\x00\x00\x00ifq\xe4h\x15h\x18h\x16X\x06\x00\x00\x00Symbolq\xe5ubh\x15h\x02h\x16X\x04\x00\x00\x00Callq\xe6ubeh\x14h\x18)\x81q\xe7}q\xe8(h\x05}q\xe9(h\x07K\x07h\x08K\x02h\tK\x06uh\x14X\x06\x00\x00\x00defineq\xeah\x15h\x18h\x16X\x06\x00\x00\x00Symbolq\xebubh\x15h\x02h\x16X\x04\x00\x00\x00Callq\xecubh\x02)\x81q\xed}q\xee(h\x05}q\xef(h\x07K\rh\x08K\x01h\tK\x01uh\n]q\xf0h\x02)\x81q\xf1}q\xf2(h\x05}q\xf3(h\x07K\rh\x08K\x07h\tK\x01uh\n]q\xf4(h\x10)\x81q\xf5}q\xf6(h\x05}q\xf7(h\x07K\rh\x08K\x0eh\tK\x01uh\x14K\x02h\x15h\x10h\x16X\x07\x00\x00\x00Numericq\xf8ubh\x10)\x81q\xf9}q\xfa(h\x05}q\xfb(h\x07K\rh\x08K\x10h\tK\x01uh\x14K\x07h\x15h\x10h\x16X\x07\x00\x00\x00Numericq\xfcubeh\x14h\x18)\x81q\xfd}q\xfe(h\x05}q\xff(h\x07K\rh\x08K\x08h\tK\x05uh\x14X\x05\x00\x00\x00integr\x00\x01\x00\x00h\x15h\x18h\x16X\x06\x00\x00\x00Symbolr\x01\x01\x00\x00ubh\x15h\x02h\x16X\x04\x00\x00\x00Callr\x02\x01\x00\x00ubah\x14h\x18)\x81r\x03\x01\x00\x00}r\x04\x01\x00\x00(h\x05}r\x05\x01\x00\x00(h\x07K\rh\x08K\x02h\tK\x04uh\x14X\x04\x00\x00\x00putsr\x06\x01\x00\x00h\x15h\x18h\x16X\x06\x00\x00\x00Symbolr\x07\x01\x00\x00ubh\x15h\x02h\x16X\x04\x00\x00\x00Callr\x08\x01\x00\x00ube}r\t\x01\x00\x00X\x04\x00\x00\x00filer\n\x01\x00\x00X\x16\x00\x00\x00samples/integral.lispyr\x0b\x01\x00\x00sb.'