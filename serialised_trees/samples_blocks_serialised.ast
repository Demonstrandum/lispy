VISUALISED_ABSTRACT_SYNTAX_TREE
┃
┣━<AST::Node[Call]
┃      ┣━caller
┃      ┃  ┗━<AST::Node[Symbol] ('define')>
┃      ┗━operands=[
┃         <AST::Node[Call]
┃            ┣━caller
┃            ┃  ┗━<AST::Node[Symbol] ('two-liner')>
┃            ┗━operands=[
┃               <AST::Node[Symbol] ('a')>
┃              ]>
┃         <AST::Node[Call]
┃            ┣━caller
┃            ┃  ┗━<AST::Node[Symbol] ('do')>
┃            ┗━operands=[
┃               <AST::Node[Call]
┃               ┣━caller
┃               ┃  ┗━<AST::Node[Symbol] ('let')>
┃               ┗━operands=[
┃                  <AST::Node[Call]
┃                  ┣━caller
┃                  ┃  ┗━<AST::Node[Symbol] ('b')>
┃                  ┗━operands=[
┃                     <AST::Node[Call]
┃                     ┣━caller
┃                     ┃  ┗━<AST::Node[Symbol] ('+')>
┃                     ┗━operands=[
┃                        <AST::Node[Symbol] ('a')>
┃                        <AST::Node[Numeric] (3)>
┃                       ]>
┃                    ]>
┃                 ]>
┃               <AST::Node[Yield] (<lispy.tree.Call object at 0x7fab2fc2d940>)>
┃              ]>
┃        ]>
┃
┣━<AST::Node[Call]
┃      ┣━caller
┃      ┃  ┗━<AST::Node[Symbol] ('puts')>
┃      ┗━operands=[
┃         <AST::Node[Call]
┃            ┣━caller
┃            ┃  ┗━<AST::Node[Symbol] ('two-liner')>
┃            ┗━operands=[
┃               <AST::Node[Numeric] (0)>
┃              ]>
┃        ]>
┃
┣━<AST::Node[Call]
┃      ┣━caller
┃      ┃  ┗━<AST::Node[Symbol] ('define')>
┃      ┗━operands=[
┃         <AST::Node[Call]
┃            ┣━caller
┃            ┃  ┗━<AST::Node[Symbol] ('useless')>
┃            ┗━operands=[
┃               <AST::Node[Symbol] ('a')>
┃              ]>
┃         <AST::Node[Call]
┃            ┣━caller
┃            ┃  ┗━<AST::Node[Symbol] ('do')>
┃            ┗━operands=[
┃               <AST::Node[Call]
┃               ┣━caller
┃               ┃  ┗━<AST::Node[Symbol] ('let')>
┃               ┗━operands=[
┃                  <AST::Node[Call]
┃                  ┣━caller
┃                  ┃  ┗━<AST::Node[Symbol] ('b')>
┃                  ┗━operands=[
┃                     <AST::Node[Call]
┃                     ┣━caller
┃                     ┃  ┗━<AST::Node[Symbol] ('+')>
┃                     ┗━operands=[
┃                        <AST::Node[Symbol] ('a')>
┃                        <AST::Node[Numeric] (3)>
┃                       ]>
┃                    ]>
┃                 ]>
┃               <AST::Node[Yield] (<lispy.tree.Call object at 0x7fab2fc32470>)>
┃               <AST::Node[Call]
┃               ┣━caller
┃               ┃  ┗━<AST::Node[Symbol] ('let')>
┃               ┗━operands=[
┃                  <AST::Node[Call]
┃                  ┣━caller
┃                  ┃  ┗━<AST::Node[Symbol] ('c')>
┃                  ┗━operands=[
┃                     <AST::Node[Numeric] (5)>
┃                    ]>
┃                 ]>
┃               <AST::Node[Yield] (<lispy.tree.Symbol object at 0x7fab2fc32780>)>
┃              ]>
┃        ]>
┃
┣━<AST::Node[Call]
┃      ┣━caller
┃      ┃  ┗━<AST::Node[Symbol] ('puts')>
┃      ┗━operands=[
┃         <AST::Node[Call]
┃            ┣━caller
┃            ┃  ┗━<AST::Node[Symbol] ('useless')>
┃            ┗━operands=[
┃               <AST::Node[Numeric] (0)>
┃              ]>
┃         <AST::Node[String] ('')>
┃        ]>
┃
┣━<AST::Node[Call]
┃      ┣━caller
┃      ┃  ┗━<AST::Node[Symbol] ('define')>
┃      ┗━operands=[
┃         <AST::Node[Call]
┃            ┣━caller
┃            ┃  ┗━<AST::Node[Symbol] ('closest-to-100')>
┃            ┗━operands=[
┃               <AST::Node[Symbol] ('n')>
┃              ]>
┃         <AST::Node[Call]
┃            ┣━caller
┃            ┃  ┗━<AST::Node[Symbol] ('do')>
┃            ┗━operands=[
┃               <AST::Node[Call]
┃               ┣━caller
┃               ┃  ┗━<AST::Node[Symbol] ('if')>
┃               ┗━operands=[
┃                  <AST::Node[Call]
┃                  ┣━caller
┃                  ┃  ┗━<AST::Node[Symbol] ('>=')>
┃                  ┗━operands=[
┃                     <AST::Node[Symbol] ('n')>
┃                     <AST::Node[Numeric] (50)>
┃                    ]>
┃                  <AST::Node[Yield] (<lispy.tree.Numeric object at 0x7fab2fc350b8>)>
┃                 ]>
┃               <AST::Node[Yield] (<lispy.tree.Numeric object at 0x7fab2fc35208>)>
┃              ]>
┃        ]>
┃
┣━<AST::Node[Call]
┃      ┣━caller
┃      ┃  ┗━<AST::Node[Symbol] ('puts')>
┃      ┗━operands=[
┃         <AST::Node[Call]
┃            ┣━caller
┃            ┃  ┗━<AST::Node[Symbol] ('closest-to-100')>
┃            ┗━operands=[
┃               <AST::Node[Numeric] (53)>
┃              ]>
┃        ]>
┃
┣━<AST::Node[Call]
┃      ┣━caller
┃      ┃  ┗━<AST::Node[Symbol] ('puts')>
┃      ┗━operands=[
┃         <AST::Node[Call]
┃            ┣━caller
┃            ┃  ┗━<AST::Node[Symbol] ('closest-to-100')>
┃            ┗━operands=[
┃               <AST::Node[Numeric] (46)>
┃              ]>
┃        ]>
┃
SERIALISED_PICKLE_AST
b'\x80\x03clispy.tree\nTree\nq\x00)\x81q\x01(clispy.tree\nCall\nq\x02)\x81q\x03}q\x04(X\x08\x00\x00\x00locationq\x05}q\x06(X\x04\x00\x00\x00lineq\x07K\x01X\x06\x00\x00\x00columnq\x08K\x01X\x08\x00\x00\x00filenameq\tX\x14\x00\x00\x00samples/blocks.lispyq\nX\x04\x00\x00\x00spanq\x0bK\x01uX\x08\x00\x00\x00operandsq\x0c]q\r(h\x02)\x81q\x0e}q\x0f(h\x05}q\x10(h\x07K\x01h\x08K\th\th\nh\x0bK\x01uh\x0c]q\x11clispy.tree\nSymbol\nq\x12)\x81q\x13}q\x14(h\x05}q\x15(h\x07K\x01h\x08K\x14h\th\nh\x0bK\x01uX\x05\x00\x00\x00valueq\x16X\x01\x00\x00\x00aq\x17X\x04\x00\x00\x00typeq\x18h\x12X\x04\x00\x00\x00nameq\x19X\x06\x00\x00\x00Symbolq\x1aubah\x16h\x12)\x81q\x1b}q\x1c(h\x05}q\x1d(h\x07K\x01h\x08K\nh\th\nh\x0bK\tuh\x16X\t\x00\x00\x00two-linerq\x1eh\x18h\x12h\x19X\x06\x00\x00\x00Symbolq\x1fubh\x18h\x02h\x19X\x04\x00\x00\x00Callq ubh\x02)\x81q!}q"(h\x05}q#(h\x07K\x01h\x08K\x17h\th\nh\x0bK\x01uh\x0c]q$(h\x02)\x81q%}q&(h\x05}q\'(h\x07K\x02h\x08K\x03h\th\nh\x0bK\x01uh\x0c]q(h\x02)\x81q)}q*(h\x05}q+(h\x07K\x02h\x08K\x08h\th\nh\x0bK\x01uh\x0c]q,h\x02)\x81q-}q.(h\x05}q/(h\x07K\x02h\x08K\x0bh\th\nh\x0bK\x01uh\x0c]q0(h\x12)\x81q1}q2(h\x05}q3(h\x07K\x02h\x08K\x0eh\th\nh\x0bK\x01uh\x16h\x17h\x18h\x12h\x19X\x06\x00\x00\x00Symbolq4ubclispy.tree\nNumeric\nq5)\x81q6}q7(h\x05}q8(h\x07K\x02h\x08K\x10h\th\nh\x0bK\x01uh\x16K\x03h\x18h5h\x19X\x07\x00\x00\x00Numericq9ubeh\x16h\x12)\x81q:}q;(h\x05}q<(h\x07K\x02h\x08K\x0ch\th\nh\x0bK\x01uh\x16X\x01\x00\x00\x00+q=h\x18h\x12h\x19X\x06\x00\x00\x00Symbolq>ubh\x18h\x02h\x19X\x04\x00\x00\x00Callq?ubah\x16h\x12)\x81q@}qA(h\x05}qB(h\x07K\x02h\x08K\th\th\nh\x0bK\x01uh\x16X\x01\x00\x00\x00bqCh\x18h\x12h\x19X\x06\x00\x00\x00SymbolqDubh\x18h\x02h\x19X\x04\x00\x00\x00CallqEubah\x16h\x12)\x81qF}qG(h\x05}qH(h\x07K\x02h\x08K\x04h\th\nh\x0bK\x03uh\x16X\x03\x00\x00\x00letqIh\x18h\x12h\x19X\x06\x00\x00\x00SymbolqJubh\x18h\x02h\x19X\x04\x00\x00\x00CallqKubclispy.tree\nYield\nqL)\x81qM}qN(h\x05}qO(h\x07K\x03h\x08K\x03h\th\nh\x0bK\x01uh\x16h\x02)\x81qP}qQ(h\x05}qR(h\x07K\x03h\x08K\nh\th\nh\x0bK\x01uh\x0c]qS(h\x12)\x81qT}qU(h\x05}qV(h\x07K\x03h\x08K\rh\th\nh\x0bK\x01uh\x16hCh\x18h\x12h\x19X\x06\x00\x00\x00SymbolqWubh5)\x81qX}qY(h\x05}qZ(h\x07K\x03h\x08K\x0fh\th\nh\x0bK\x01uh\x16K\x02h\x18h5h\x19X\x07\x00\x00\x00Numericq[ubeh\x16h\x12)\x81q\\}q](h\x05}q^(h\x07K\x03h\x08K\x0bh\th\nh\x0bK\x01uh\x16X\x01\x00\x00\x00*q_h\x18h\x12h\x19X\x06\x00\x00\x00Symbolq`ubh\x18h\x02h\x19X\x04\x00\x00\x00Callqaubh\x18hLh\x19X\x05\x00\x00\x00Yieldqbubeh\x16h\x12)\x81qc}qd(h\x05}qe(h\x07K\x01h\x08K\x18h\th\nh\x0bK\x02uh\x16X\x02\x00\x00\x00doqfh\x18h\x12h\x19X\x06\x00\x00\x00Symbolqgubh\x18h\x02h\x19X\x04\x00\x00\x00Callqhubeh\x16h\x12)\x81qi}qj(h\x05}qk(h\x07K\x01h\x08K\x02h\th\nh\x0bK\x06uh\x16X\x06\x00\x00\x00defineqlh\x18h\x12h\x19X\x06\x00\x00\x00Symbolqmubh\x18h\x02h\x19X\x04\x00\x00\x00Callqnubh\x02)\x81qo}qp(h\x05}qq(h\x07K\x05h\x08K\x01h\th\nh\x0bK\x01uh\x0c]qrh\x02)\x81qs}qt(h\x05}qu(h\x07K\x05h\x08K\x07h\th\nh\x0bK\x01uh\x0c]qvh5)\x81qw}qx(h\x05}qy(h\x07K\x05h\x08K\x12h\th\nh\x0bK\x01uh\x16K\x00h\x18h5h\x19X\x07\x00\x00\x00Numericqzubah\x16h\x12)\x81q{}q|(h\x05}q}(h\x07K\x05h\x08K\x08h\th\nh\x0bK\tuh\x16X\t\x00\x00\x00two-linerq~h\x18h\x12h\x19X\x06\x00\x00\x00Symbolq\x7fubh\x18h\x02h\x19X\x04\x00\x00\x00Callq\x80ubah\x16h\x12)\x81q\x81}q\x82(h\x05}q\x83(h\x07K\x05h\x08K\x02h\th\nh\x0bK\x04uh\x16X\x04\x00\x00\x00putsq\x84h\x18h\x12h\x19X\x06\x00\x00\x00Symbolq\x85ubh\x18h\x02h\x19X\x04\x00\x00\x00Callq\x86ubh\x02)\x81q\x87}q\x88(h\x05}q\x89(h\x07K\th\x08K\x01h\th\nh\x0bK\x01uh\x0c]q\x8a(h\x02)\x81q\x8b}q\x8c(h\x05}q\x8d(h\x07K\th\x08K\th\th\nh\x0bK\x01uh\x0c]q\x8eh\x12)\x81q\x8f}q\x90(h\x05}q\x91(h\x07K\th\x08K\x12h\th\nh\x0bK\x01uh\x16h\x17h\x18h\x12h\x19X\x06\x00\x00\x00Symbolq\x92ubah\x16h\x12)\x81q\x93}q\x94(h\x05}q\x95(h\x07K\th\x08K\nh\th\nh\x0bK\x07uh\x16X\x07\x00\x00\x00uselessq\x96h\x18h\x12h\x19X\x06\x00\x00\x00Symbolq\x97ubh\x18h\x02h\x19X\x04\x00\x00\x00Callq\x98ubh\x02)\x81q\x99}q\x9a(h\x05}q\x9b(h\x07K\th\x08K\x15h\th\nh\x0bK\x01uh\x0c]q\x9c(h\x02)\x81q\x9d}q\x9e(h\x05}q\x9f(h\x07K\nh\x08K\x03h\th\nh\x0bK\x01uh\x0c]q\xa0h\x02)\x81q\xa1}q\xa2(h\x05}q\xa3(h\x07K\nh\x08K\x08h\th\nh\x0bK\x01uh\x0c]q\xa4h\x02)\x81q\xa5}q\xa6(h\x05}q\xa7(h\x07K\nh\x08K\x0bh\th\nh\x0bK\x01uh\x0c]q\xa8(h\x12)\x81q\xa9}q\xaa(h\x05}q\xab(h\x07K\nh\x08K\x0eh\th\nh\x0bK\x01uh\x16h\x17h\x18h\x12h\x19X\x06\x00\x00\x00Symbolq\xacubh5)\x81q\xad}q\xae(h\x05}q\xaf(h\x07K\nh\x08K\x10h\th\nh\x0bK\x01uh\x16K\x03h\x18h5h\x19X\x07\x00\x00\x00Numericq\xb0ubeh\x16h\x12)\x81q\xb1}q\xb2(h\x05}q\xb3(h\x07K\nh\x08K\x0ch\th\nh\x0bK\x01uh\x16h=h\x18h\x12h\x19X\x06\x00\x00\x00Symbolq\xb4ubh\x18h\x02h\x19X\x04\x00\x00\x00Callq\xb5ubah\x16h\x12)\x81q\xb6}q\xb7(h\x05}q\xb8(h\x07K\nh\x08K\th\th\nh\x0bK\x01uh\x16hCh\x18h\x12h\x19X\x06\x00\x00\x00Symbolq\xb9ubh\x18h\x02h\x19X\x04\x00\x00\x00Callq\xbaubah\x16h\x12)\x81q\xbb}q\xbc(h\x05}q\xbd(h\x07K\nh\x08K\x04h\th\nh\x0bK\x03uh\x16X\x03\x00\x00\x00letq\xbeh\x18h\x12h\x19X\x06\x00\x00\x00Symbolq\xbfubh\x18h\x02h\x19X\x04\x00\x00\x00Callq\xc0ubhL)\x81q\xc1}q\xc2(h\x05}q\xc3(h\x07K\x0bh\x08K\x03h\th\nh\x0bK\x01uh\x16h\x02)\x81q\xc4}q\xc5(h\x05}q\xc6(h\x07K\x0bh\x08K\nh\th\nh\x0bK\x01uh\x0c]q\xc7(h\x12)\x81q\xc8}q\xc9(h\x05}q\xca(h\x07K\x0bh\x08K\rh\th\nh\x0bK\x01uh\x16hCh\x18h\x12h\x19X\x06\x00\x00\x00Symbolq\xcbubh5)\x81q\xcc}q\xcd(h\x05}q\xce(h\x07K\x0bh\x08K\x0fh\th\nh\x0bK\x01uh\x16K\x02h\x18h5h\x19X\x07\x00\x00\x00Numericq\xcfubeh\x16h\x12)\x81q\xd0}q\xd1(h\x05}q\xd2(h\x07K\x0bh\x08K\x0bh\th\nh\x0bK\x01uh\x16h_h\x18h\x12h\x19X\x06\x00\x00\x00Symbolq\xd3ubh\x18h\x02h\x19X\x04\x00\x00\x00Callq\xd4ubh\x18hLh\x19X\x05\x00\x00\x00Yieldq\xd5ubh\x02)\x81q\xd6}q\xd7(h\x05}q\xd8(h\x07K\x0ch\x08K\x03h\th\nh\x0bK\x01uh\x0c]q\xd9h\x02)\x81q\xda}q\xdb(h\x05}q\xdc(h\x07K\x0ch\x08K\x08h\th\nh\x0bK\x01uh\x0c]q\xddh5)\x81q\xde}q\xdf(h\x05}q\xe0(h\x07K\x0ch\x08K\x0bh\th\nh\x0bK\x01uh\x16K\x05h\x18h5h\x19X\x07\x00\x00\x00Numericq\xe1ubah\x16h\x12)\x81q\xe2}q\xe3(h\x05}q\xe4(h\x07K\x0ch\x08K\th\th\nh\x0bK\x01uh\x16X\x01\x00\x00\x00cq\xe5h\x18h\x12h\x19X\x06\x00\x00\x00Symbolq\xe6ubh\x18h\x02h\x19X\x04\x00\x00\x00Callq\xe7ubah\x16h\x12)\x81q\xe8}q\xe9(h\x05}q\xea(h\x07K\x0ch\x08K\x04h\th\nh\x0bK\x03uh\x16X\x03\x00\x00\x00letq\xebh\x18h\x12h\x19X\x06\x00\x00\x00Symbolq\xecubh\x18h\x02h\x19X\x04\x00\x00\x00Callq\xedubhL)\x81q\xee}q\xef(h\x05}q\xf0(h\x07K\rh\x08K\x03h\th\nh\x0bK\x01uh\x16h\x12)\x81q\xf1}q\xf2(h\x05}q\xf3(h\x07K\rh\x08K\nh\th\nh\x0bK\x01uh\x16h\xe5h\x18h\x12h\x19X\x06\x00\x00\x00Symbolq\xf4ubh\x18hLh\x19X\x05\x00\x00\x00Yieldq\xf5ubeh\x16h\x12)\x81q\xf6}q\xf7(h\x05}q\xf8(h\x07K\th\x08K\x16h\th\nh\x0bK\x02uh\x16X\x02\x00\x00\x00doq\xf9h\x18h\x12h\x19X\x06\x00\x00\x00Symbolq\xfaubh\x18h\x02h\x19X\x04\x00\x00\x00Callq\xfbubeh\x16h\x12)\x81q\xfc}q\xfd(h\x05}q\xfe(h\x07K\th\x08K\x02h\th\nh\x0bK\x06uh\x16X\x06\x00\x00\x00defineq\xffh\x18h\x12h\x19X\x06\x00\x00\x00Symbolr\x00\x01\x00\x00ubh\x18h\x02h\x19X\x04\x00\x00\x00Callr\x01\x01\x00\x00ubh\x02)\x81r\x02\x01\x00\x00}r\x03\x01\x00\x00(h\x05}r\x04\x01\x00\x00(h\x07K\x0fh\x08K\x01h\th\nh\x0bK\x01uh\x0c]r\x05\x01\x00\x00(h\x02)\x81r\x06\x01\x00\x00}r\x07\x01\x00\x00(h\x05}r\x08\x01\x00\x00(h\x07K\x0fh\x08K\x07h\th\nh\x0bK\x01uh\x0c]r\t\x01\x00\x00h5)\x81r\n\x01\x00\x00}r\x0b\x01\x00\x00(h\x05}r\x0c\x01\x00\x00(h\x07K\x0fh\x08K\x10h\th\nh\x0bK\x01uh\x16K\x00h\x18h5h\x19X\x07\x00\x00\x00Numericr\r\x01\x00\x00ubah\x16h\x12)\x81r\x0e\x01\x00\x00}r\x0f\x01\x00\x00(h\x05}r\x10\x01\x00\x00(h\x07K\x0fh\x08K\x08h\th\nh\x0bK\x07uh\x16X\x07\x00\x00\x00uselessr\x11\x01\x00\x00h\x18h\x12h\x19X\x06\x00\x00\x00Symbolr\x12\x01\x00\x00ubh\x18h\x02h\x19X\x04\x00\x00\x00Callr\x13\x01\x00\x00ubclispy.tree\nString\nr\x14\x01\x00\x00)\x81r\x15\x01\x00\x00}r\x16\x01\x00\x00(h\x05}r\x17\x01\x00\x00(h\x07K\x0fh\x08K\x13h\th\nh\x0bK\x00uh\x16X\x00\x00\x00\x00r\x18\x01\x00\x00h\x18j\x14\x01\x00\x00h\x19X\x06\x00\x00\x00Stringr\x19\x01\x00\x00ubeh\x16h\x12)\x81r\x1a\x01\x00\x00}r\x1b\x01\x00\x00(h\x05}r\x1c\x01\x00\x00(h\x07K\x0fh\x08K\x02h\th\nh\x0bK\x04uh\x16X\x04\x00\x00\x00putsr\x1d\x01\x00\x00h\x18h\x12h\x19X\x06\x00\x00\x00Symbolr\x1e\x01\x00\x00ubh\x18h\x02h\x19X\x04\x00\x00\x00Callr\x1f\x01\x00\x00ubh\x02)\x81r \x01\x00\x00}r!\x01\x00\x00(h\x05}r"\x01\x00\x00(h\x07K\x12h\x08K\x01h\th\nh\x0bK\x01uh\x0c]r#\x01\x00\x00(h\x02)\x81r$\x01\x00\x00}r%\x01\x00\x00(h\x05}r&\x01\x00\x00(h\x07K\x12h\x08K\th\th\nh\x0bK\x01uh\x0c]r\'\x01\x00\x00h\x12)\x81r(\x01\x00\x00}r)\x01\x00\x00(h\x05}r*\x01\x00\x00(h\x07K\x12h\x08K\x19h\th\nh\x0bK\x01uh\x16X\x01\x00\x00\x00nr+\x01\x00\x00h\x18h\x12h\x19X\x06\x00\x00\x00Symbolr,\x01\x00\x00ubah\x16h\x12)\x81r-\x01\x00\x00}r.\x01\x00\x00(h\x05}r/\x01\x00\x00(h\x07K\x12h\x08K\nh\th\nh\x0bK\x0euh\x16X\x0e\x00\x00\x00closest-to-100r0\x01\x00\x00h\x18h\x12h\x19X\x06\x00\x00\x00Symbolr1\x01\x00\x00ubh\x18h\x02h\x19X\x04\x00\x00\x00Callr2\x01\x00\x00ubh\x02)\x81r3\x01\x00\x00}r4\x01\x00\x00(h\x05}r5\x01\x00\x00(h\x07K\x12h\x08K\x1ch\th\nh\x0bK\x01uh\x0c]r6\x01\x00\x00(h\x02)\x81r7\x01\x00\x00}r8\x01\x00\x00(h\x05}r9\x01\x00\x00(h\x07K\x13h\x08K\x03h\th\nh\x0bK\x01uh\x0c]r:\x01\x00\x00(h\x02)\x81r;\x01\x00\x00}r<\x01\x00\x00(h\x05}r=\x01\x00\x00(h\x07K\x13h\x08K\x07h\th\nh\x0bK\x01uh\x0c]r>\x01\x00\x00(h\x12)\x81r?\x01\x00\x00}r@\x01\x00\x00(h\x05}rA\x01\x00\x00(h\x07K\x13h\x08K\x0bh\th\nh\x0bK\x01uh\x16j+\x01\x00\x00h\x18h\x12h\x19X\x06\x00\x00\x00SymbolrB\x01\x00\x00ubh5)\x81rC\x01\x00\x00}rD\x01\x00\x00(h\x05}rE\x01\x00\x00(h\x07K\x13h\x08K\rh\th\nh\x0bK\x02uh\x16K2h\x18h5h\x19X\x07\x00\x00\x00NumericrF\x01\x00\x00ubeh\x16h\x12)\x81rG\x01\x00\x00}rH\x01\x00\x00(h\x05}rI\x01\x00\x00(h\x07K\x13h\x08K\x08h\th\nh\x0bK\x02uh\x16X\x02\x00\x00\x00>=rJ\x01\x00\x00h\x18h\x12h\x19X\x06\x00\x00\x00SymbolrK\x01\x00\x00ubh\x18h\x02h\x19X\x04\x00\x00\x00CallrL\x01\x00\x00ubhL)\x81rM\x01\x00\x00}rN\x01\x00\x00(h\x05}rO\x01\x00\x00(h\x07K\x14h\x08K\x05h\th\nh\x0bK\x01uh\x16h5)\x81rP\x01\x00\x00}rQ\x01\x00\x00(h\x05}rR\x01\x00\x00(h\x07K\x14h\x08K\x0ch\th\nh\x0bK\x03uh\x16Kdh\x18h5h\x19X\x07\x00\x00\x00NumericrS\x01\x00\x00ubh\x18hLh\x19X\x05\x00\x00\x00YieldrT\x01\x00\x00ubeh\x16h\x12)\x81rU\x01\x00\x00}rV\x01\x00\x00(h\x05}rW\x01\x00\x00(h\x07K\x13h\x08K\x04h\th\nh\x0bK\x02uh\x16X\x02\x00\x00\x00ifrX\x01\x00\x00h\x18h\x12h\x19X\x06\x00\x00\x00SymbolrY\x01\x00\x00ubh\x18h\x02h\x19X\x04\x00\x00\x00CallrZ\x01\x00\x00ubhL)\x81r[\x01\x00\x00}r\\\x01\x00\x00(h\x05}r]\x01\x00\x00(h\x07K\x15h\x08K\x03h\th\nh\x0bK\x01uh\x16h5)\x81r^\x01\x00\x00}r_\x01\x00\x00(h\x05}r`\x01\x00\x00(h\x07K\x15h\x08K\nh\th\nh\x0bK\x01uh\x16K\x00h\x18h5h\x19X\x07\x00\x00\x00Numericra\x01\x00\x00ubh\x18hLh\x19X\x05\x00\x00\x00Yieldrb\x01\x00\x00ubeh\x16h\x12)\x81rc\x01\x00\x00}rd\x01\x00\x00(h\x05}re\x01\x00\x00(h\x07K\x12h\x08K\x1dh\th\nh\x0bK\x02uh\x16X\x02\x00\x00\x00dorf\x01\x00\x00h\x18h\x12h\x19X\x06\x00\x00\x00Symbolrg\x01\x00\x00ubh\x18h\x02h\x19X\x04\x00\x00\x00Callrh\x01\x00\x00ubeh\x16h\x12)\x81ri\x01\x00\x00}rj\x01\x00\x00(h\x05}rk\x01\x00\x00(h\x07K\x12h\x08K\x02h\th\nh\x0bK\x06uh\x16X\x06\x00\x00\x00definerl\x01\x00\x00h\x18h\x12h\x19X\x06\x00\x00\x00Symbolrm\x01\x00\x00ubh\x18h\x02h\x19X\x04\x00\x00\x00Callrn\x01\x00\x00ubh\x02)\x81ro\x01\x00\x00}rp\x01\x00\x00(h\x05}rq\x01\x00\x00(h\x07K\x19h\x08K\x01h\th\nh\x0bK\x01uh\x0c]rr\x01\x00\x00h\x02)\x81rs\x01\x00\x00}rt\x01\x00\x00(h\x05}ru\x01\x00\x00(h\x07K\x19h\x08K\x07h\th\nh\x0bK\x01uh\x0c]rv\x01\x00\x00h5)\x81rw\x01\x00\x00}rx\x01\x00\x00(h\x05}ry\x01\x00\x00(h\x07K\x19h\x08K\x17h\th\nh\x0bK\x02uh\x16K5h\x18h5h\x19X\x07\x00\x00\x00Numericrz\x01\x00\x00ubah\x16h\x12)\x81r{\x01\x00\x00}r|\x01\x00\x00(h\x05}r}\x01\x00\x00(h\x07K\x19h\x08K\x08h\th\nh\x0bK\x0euh\x16X\x0e\x00\x00\x00closest-to-100r~\x01\x00\x00h\x18h\x12h\x19X\x06\x00\x00\x00Symbolr\x7f\x01\x00\x00ubh\x18h\x02h\x19X\x04\x00\x00\x00Callr\x80\x01\x00\x00ubah\x16h\x12)\x81r\x81\x01\x00\x00}r\x82\x01\x00\x00(h\x05}r\x83\x01\x00\x00(h\x07K\x19h\x08K\x02h\th\nh\x0bK\x04uh\x16X\x04\x00\x00\x00putsr\x84\x01\x00\x00h\x18h\x12h\x19X\x06\x00\x00\x00Symbolr\x85\x01\x00\x00ubh\x18h\x02h\x19X\x04\x00\x00\x00Callr\x86\x01\x00\x00ubh\x02)\x81r\x87\x01\x00\x00}r\x88\x01\x00\x00(h\x05}r\x89\x01\x00\x00(h\x07K\x1ah\x08K\x01h\th\nh\x0bK\x01uh\x0c]r\x8a\x01\x00\x00h\x02)\x81r\x8b\x01\x00\x00}r\x8c\x01\x00\x00(h\x05}r\x8d\x01\x00\x00(h\x07K\x1ah\x08K\x07h\th\nh\x0bK\x01uh\x0c]r\x8e\x01\x00\x00h5)\x81r\x8f\x01\x00\x00}r\x90\x01\x00\x00(h\x05}r\x91\x01\x00\x00(h\x07K\x1ah\x08K\x17h\th\nh\x0bK\x02uh\x16K.h\x18h5h\x19X\x07\x00\x00\x00Numericr\x92\x01\x00\x00ubah\x16h\x12)\x81r\x93\x01\x00\x00}r\x94\x01\x00\x00(h\x05}r\x95\x01\x00\x00(h\x07K\x1ah\x08K\x08h\th\nh\x0bK\x0euh\x16X\x0e\x00\x00\x00closest-to-100r\x96\x01\x00\x00h\x18h\x12h\x19X\x06\x00\x00\x00Symbolr\x97\x01\x00\x00ubh\x18h\x02h\x19X\x04\x00\x00\x00Callr\x98\x01\x00\x00ubah\x16h\x12)\x81r\x99\x01\x00\x00}r\x9a\x01\x00\x00(h\x05}r\x9b\x01\x00\x00(h\x07K\x1ah\x08K\x02h\th\nh\x0bK\x04uh\x16X\x04\x00\x00\x00putsr\x9c\x01\x00\x00h\x18h\x12h\x19X\x06\x00\x00\x00Symbolr\x9d\x01\x00\x00ubh\x18h\x02h\x19X\x04\x00\x00\x00Callr\x9e\x01\x00\x00ube}r\x9f\x01\x00\x00X\x04\x00\x00\x00filer\xa0\x01\x00\x00h\nsb.'