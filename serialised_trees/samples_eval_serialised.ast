VISUALISED_ABSTRACT_SYNTAX_TREE
┃
┣━<AST::Node[Call]
┃      ┣━caller
┃      ┃  ┗━<AST::Node[Symbol] ('let')>
┃      ┗━operands=[
┃         <AST::Node[Call]
┃            ┣━caller
┃            ┃  ┗━<AST::Node[Symbol] ('a')>
┃            ┗━operands=[
┃               <AST::Node[Uneval] (<lispy.tree.Call object at 0x7fb136e2cd68>)>
┃              ]>
┃         <AST::Node[Call]
┃            ┣━caller
┃            ┃  ┗━<AST::Node[Symbol] ('b')>
┃            ┗━operands=[
┃               <AST::Node[Numeric] (2)>
┃              ]>
┃        ]>
┃
┣━<AST::Node[Call]
┃      ┣━caller
┃      ┃  ┗━<AST::Node[Symbol] ('let')>
┃      ┗━operands=[
┃         <AST::Node[Call]
┃            ┣━caller
┃            ┃  ┗━<AST::Node[Symbol] ('c')>
┃            ┗━operands=[
┃               <AST::Node[Uneval] (<lispy.tree.Symbol object at 0x7fb136e35208>)>
┃              ]>
┃        ]>
┃
┣━<AST::Node[Call]
┃      ┣━caller
┃      ┃  ┗━<AST::Node[Symbol] ('define')>
┃      ┗━operands=[
┃         <AST::Node[Call]
┃            ┣━caller
┃            ┃  ┗━<AST::Node[Symbol] ('f')>
┃            ┗━operands=[
┃               <AST::Node[Symbol] ('x')>
┃              ]>
┃         <AST::Node[Call]
┃            ┣━caller
┃            ┃  ┗━<AST::Node[Symbol] ('+')>
┃            ┗━operands=[
┃               <AST::Node[Symbol] ('x')>
┃               <AST::Node[Numeric] (3)>
┃              ]>
┃        ]>
┃
┣━<AST::Node[Call]
┃      ┣━caller
┃      ┃  ┗━<AST::Node[Symbol] ('puts')>
┃      ┗━operands=[
┃         <AST::Node[Symbol] ('c')>
┃        ]>
┃
┣━<AST::Node[Call]
┃      ┣━caller
┃      ┃  ┗━<AST::Node[Symbol] ('puts')>
┃      ┗━operands=[
┃         <AST::Node[Call]
┃            ┣━caller
┃            ┃  ┗━<AST::Node[Symbol] ('eval')>
┃            ┗━operands=[
┃               <AST::Node[Symbol] ('c')>
┃              ]>
┃        ]>
┃
┣━<AST::Node[Call]
┃      ┣━caller
┃      ┃  ┗━<AST::Node[Symbol] ('puts')>
┃      ┗━operands=[
┃         <AST::Node[Call]
┃            ┣━caller
┃            ┃  ┗━<AST::Node[Symbol] ('eval')>
┃            ┗━operands=[
┃               <AST::Node[Call]
┃               ┣━caller
┃               ┃  ┗━<AST::Node[Symbol] ('eval')>
┃               ┗━operands=[
┃                  <AST::Node[Symbol] ('c')>
┃                 ]>
┃              ]>
┃        ]>
┃
SERIALISED_PICKLE_AST
b'\x80\x03clispy.tree\nTree\nq\x00)\x81q\x01(clispy.tree\nCall\nq\x02)\x81q\x03}q\x04(X\x08\x00\x00\x00locationq\x05}q\x06(X\x04\x00\x00\x00lineq\x07K\x01X\x06\x00\x00\x00columnq\x08K\x01X\x04\x00\x00\x00spanq\tK\x01uX\x08\x00\x00\x00operandsq\n]q\x0b(h\x02)\x81q\x0c}q\r(h\x05}q\x0e(h\x07K\x01h\x08K\x06h\tK\x01uh\n]q\x0fclispy.tree\nUneval\nq\x10)\x81q\x11}q\x12(h\x05}q\x13(h\x07K\x01h\x08K\th\tK\x01uX\x05\x00\x00\x00valueq\x14h\x02)\x81q\x15}q\x16(h\x05}q\x17(h\x07K\x01h\x08K\nh\tK\x01uh\n]q\x18clispy.tree\nNumeric\nq\x19)\x81q\x1a}q\x1b(h\x05}q\x1c(h\x07K\x01h\x08K\rh\tK\x01uh\x14K\x02X\x04\x00\x00\x00typeq\x1dh\x19X\x04\x00\x00\x00nameq\x1eX\x07\x00\x00\x00Numericq\x1fubah\x14clispy.tree\nSymbol\nq )\x81q!}q"(h\x05}q#(h\x07K\x01h\x08K\x0bh\tK\x01uh\x14X\x01\x00\x00\x00fq$h\x1dh h\x1eX\x06\x00\x00\x00Symbolq%ubh\x1dh\x02h\x1eX\x04\x00\x00\x00Callq&ubh\x1dh\x10h\x1eX\x06\x00\x00\x00Unevalq\'ubah\x14h )\x81q(}q)(h\x05}q*(h\x07K\x01h\x08K\x07h\tK\x01uh\x14X\x01\x00\x00\x00aq+h\x1dh h\x1eX\x06\x00\x00\x00Symbolq,ubh\x1dh\x02h\x1eX\x04\x00\x00\x00Callq-ubh\x02)\x81q.}q/(h\x05}q0(h\x07K\x01h\x08K\x11h\tK\x01uh\n]q1h\x19)\x81q2}q3(h\x05}q4(h\x07K\x01h\x08K\x14h\tK\x01uh\x14K\x02h\x1dh\x19h\x1eX\x07\x00\x00\x00Numericq5ubah\x14h )\x81q6}q7(h\x05}q8(h\x07K\x01h\x08K\x12h\tK\x01uh\x14X\x01\x00\x00\x00bq9h\x1dh h\x1eX\x06\x00\x00\x00Symbolq:ubh\x1dh\x02h\x1eX\x04\x00\x00\x00Callq;ubeh\x14h )\x81q<}q=(h\x05}q>(h\x07K\x01h\x08K\x02h\tK\x03uh\x14X\x03\x00\x00\x00letq?h\x1dh h\x1eX\x06\x00\x00\x00Symbolq@ubh\x1dh\x02h\x1eX\x04\x00\x00\x00CallqAubh\x02)\x81qB}qC(h\x05}qD(h\x07K\x02h\x08K\x01h\tK\x01uh\n]qEh\x02)\x81qF}qG(h\x05}qH(h\x07K\x02h\x08K\x06h\tK\x01uh\n]qIh\x10)\x81qJ}qK(h\x05}qL(h\x07K\x02h\x08K\th\tK\x01uh\x14h )\x81qM}qN(h\x05}qO(h\x07K\x02h\x08K\nh\tK\x01uh\x14h+h\x1dh h\x1eX\x06\x00\x00\x00SymbolqPubh\x1dh\x10h\x1eX\x06\x00\x00\x00UnevalqQubah\x14h )\x81qR}qS(h\x05}qT(h\x07K\x02h\x08K\x07h\tK\x01uh\x14X\x01\x00\x00\x00cqUh\x1dh h\x1eX\x06\x00\x00\x00SymbolqVubh\x1dh\x02h\x1eX\x04\x00\x00\x00CallqWubah\x14h )\x81qX}qY(h\x05}qZ(h\x07K\x02h\x08K\x02h\tK\x03uh\x14X\x03\x00\x00\x00letq[h\x1dh h\x1eX\x06\x00\x00\x00Symbolq\\ubh\x1dh\x02h\x1eX\x04\x00\x00\x00Callq]ubh\x02)\x81q^}q_(h\x05}q`(h\x07K\x04h\x08K\x01h\tK\x01uh\n]qa(h\x02)\x81qb}qc(h\x05}qd(h\x07K\x04h\x08K\th\tK\x01uh\n]qeh )\x81qf}qg(h\x05}qh(h\x07K\x04h\x08K\x0ch\tK\x01uh\x14X\x01\x00\x00\x00xqih\x1dh h\x1eX\x06\x00\x00\x00Symbolqjubah\x14h )\x81qk}ql(h\x05}qm(h\x07K\x04h\x08K\nh\tK\x01uh\x14h$h\x1dh h\x1eX\x06\x00\x00\x00Symbolqnubh\x1dh\x02h\x1eX\x04\x00\x00\x00Callqoubh\x02)\x81qp}qq(h\x05}qr(h\x07K\x04h\x08K\x0fh\tK\x01uh\n]qs(h )\x81qt}qu(h\x05}qv(h\x07K\x04h\x08K\x12h\tK\x01uh\x14hih\x1dh h\x1eX\x06\x00\x00\x00Symbolqwubh\x19)\x81qx}qy(h\x05}qz(h\x07K\x04h\x08K\x14h\tK\x01uh\x14K\x03h\x1dh\x19h\x1eX\x07\x00\x00\x00Numericq{ubeh\x14h )\x81q|}q}(h\x05}q~(h\x07K\x04h\x08K\x10h\tK\x01uh\x14X\x01\x00\x00\x00+q\x7fh\x1dh h\x1eX\x06\x00\x00\x00Symbolq\x80ubh\x1dh\x02h\x1eX\x04\x00\x00\x00Callq\x81ubeh\x14h )\x81q\x82}q\x83(h\x05}q\x84(h\x07K\x04h\x08K\x02h\tK\x06uh\x14X\x06\x00\x00\x00defineq\x85h\x1dh h\x1eX\x06\x00\x00\x00Symbolq\x86ubh\x1dh\x02h\x1eX\x04\x00\x00\x00Callq\x87ubh\x02)\x81q\x88}q\x89(h\x05}q\x8a(h\x07K\x06h\x08K\x01h\tK\x01uh\n]q\x8bh )\x81q\x8c}q\x8d(h\x05}q\x8e(h\x07K\x06h\x08K\x07h\tK\x01uh\x14hUh\x1dh h\x1eX\x06\x00\x00\x00Symbolq\x8fubah\x14h )\x81q\x90}q\x91(h\x05}q\x92(h\x07K\x06h\x08K\x02h\tK\x04uh\x14X\x04\x00\x00\x00putsq\x93h\x1dh h\x1eX\x06\x00\x00\x00Symbolq\x94ubh\x1dh\x02h\x1eX\x04\x00\x00\x00Callq\x95ubh\x02)\x81q\x96}q\x97(h\x05}q\x98(h\x07K\x07h\x08K\x01h\tK\x01uh\n]q\x99h\x02)\x81q\x9a}q\x9b(h\x05}q\x9c(h\x07K\x07h\x08K\x07h\tK\x01uh\n]q\x9dh )\x81q\x9e}q\x9f(h\x05}q\xa0(h\x07K\x07h\x08K\rh\tK\x01uh\x14hUh\x1dh h\x1eX\x06\x00\x00\x00Symbolq\xa1ubah\x14h )\x81q\xa2}q\xa3(h\x05}q\xa4(h\x07K\x07h\x08K\x08h\tK\x04uh\x14X\x04\x00\x00\x00evalq\xa5h\x1dh h\x1eX\x06\x00\x00\x00Symbolq\xa6ubh\x1dh\x02h\x1eX\x04\x00\x00\x00Callq\xa7ubah\x14h )\x81q\xa8}q\xa9(h\x05}q\xaa(h\x07K\x07h\x08K\x02h\tK\x04uh\x14X\x04\x00\x00\x00putsq\xabh\x1dh h\x1eX\x06\x00\x00\x00Symbolq\xacubh\x1dh\x02h\x1eX\x04\x00\x00\x00Callq\xadubh\x02)\x81q\xae}q\xaf(h\x05}q\xb0(h\x07K\x08h\x08K\x01h\tK\x01uh\n]q\xb1h\x02)\x81q\xb2}q\xb3(h\x05}q\xb4(h\x07K\x08h\x08K\x07h\tK\x01uh\n]q\xb5h\x02)\x81q\xb6}q\xb7(h\x05}q\xb8(h\x07K\x08h\x08K\rh\tK\x01uh\n]q\xb9h )\x81q\xba}q\xbb(h\x05}q\xbc(h\x07K\x08h\x08K\x13h\tK\x01uh\x14hUh\x1dh h\x1eX\x06\x00\x00\x00Symbolq\xbdubah\x14h )\x81q\xbe}q\xbf(h\x05}q\xc0(h\x07K\x08h\x08K\x0eh\tK\x04uh\x14X\x04\x00\x00\x00evalq\xc1h\x1dh h\x1eX\x06\x00\x00\x00Symbolq\xc2ubh\x1dh\x02h\x1eX\x04\x00\x00\x00Callq\xc3ubah\x14h )\x81q\xc4}q\xc5(h\x05}q\xc6(h\x07K\x08h\x08K\x08h\tK\x04uh\x14X\x04\x00\x00\x00evalq\xc7h\x1dh h\x1eX\x06\x00\x00\x00Symbolq\xc8ubh\x1dh\x02h\x1eX\x04\x00\x00\x00Callq\xc9ubah\x14h )\x81q\xca}q\xcb(h\x05}q\xcc(h\x07K\x08h\x08K\x02h\tK\x04uh\x14X\x04\x00\x00\x00putsq\xcdh\x1dh h\x1eX\x06\x00\x00\x00Symbolq\xceubh\x1dh\x02h\x1eX\x04\x00\x00\x00Callq\xcfube}q\xd0X\x04\x00\x00\x00fileq\xd1X\x12\x00\x00\x00samples/eval.lispyq\xd2sb.'