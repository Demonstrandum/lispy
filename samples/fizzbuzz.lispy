(define (fizz x)
  (if (divisible? x 3)
    (if (divisible? x 5)
      "FizzBuzz"
      "Fizz")
    (if (divisible? x 5)
      "Buzz"
      (string x))))

(let (a (range 1 20)))

(puts "\nPlain:" a)
(puts "\nFizz'd:" (map fizz a))

(puts)

(define (fizzer n m) (do
  (unless (<= n m)
    (yield))
  (let (s ""))
  (if (divisible? n 3)
    (concat! s "Fizz"))
  (if (divisible? n 5)
    (concat! s "Buzz"))
  (if (= s "")
    (concat! s (string n)))
  (puts s)
  (fizzer (+ n 1) m)))

(fizzer 1 15)
